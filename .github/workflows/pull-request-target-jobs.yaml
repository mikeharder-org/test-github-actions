name: Pull Request Target Jobs

on: pull_request_target

jobs:
  analyze-code:
    name: Analyze Code

    permissions:
      contents: read

    runs-on: ubuntu-latest

    outputs:
      FOO: ${{ steps.analyze.outputs.FOO }}

    steps:
      # Run everything from merge branch in read-only job
      # Alternatively, could run scripts from target branch, to prevent PRs from modifying scripts
      # to "fake" passing results.  However, running scripts from merge branch allows for easier
      # testing of script changes in PRs, and the worst the untrusted code can do, is manipulate
      # the output value.
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Sets output 'FOO' to true/false
      - name: Analyze merge/content.txt
        id: analyze
        uses: actions/github-script@v7
        with:
          script: |
            const pullRequest = require('/.github/workflows/scripts/pull-request.js')
            await pullRequest({ github, context, core }, "", "");

  add-label:
    name: Add Label

    # Only run if previous job succeeded and set 'FOO=true'
    if: ${{ success() && needs.analyze-code.outputs.FOO == 'true' }}

    permissions:
      pull-requests: write

    runs-on: ubuntu-latest

    needs: analyze-code

    steps:
      - name: Add Label
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request?.number ?? -1,
              labels: ["pull-request-target-jobs"],
            });
